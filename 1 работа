import java.io.FileOutputStream;
import java.sql.*;
import org.apache.poi.hssf.usermodel.*;

public class Main {
    public static void main(String[] args) {
        try {

            // Подключение к базе данных
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/newdb", "root", "123456789");

            // Создание нового документа Excel
            Workbook workbook = WorkbookFactory.create(true);

            // Создание нового листа
            Sheet sheet = workbook.createSheet("Данные");

            // Получение данных из базы данных
            Statement statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery("SELECT * FROM таблица");

            int rowNum = 0;

            // Запись данных в лист
            while (resultSet.next()) {
                Row row = sheet.createRow(rowNum++);

                // Запись значений в ячейки строки
                row.createCell(0).setCellValue(resultSet.getInt("id"));
                row.createCell(1).setCellValue(resultSet.getString("name"));
            }

            // Закрытие соединения
            resultSet.close();
            statement.close();
            connection.close();

            // Сохранение документа в файл
            FileOutputStream fileOut = new FileOutputStream("data.xlsx");
            workbook.write(fileOut);
            fileOut.close();

            // Вывод сообщения о успешном сохранении
            System.out.println("Данные успешно сохранены в файл data.xlsx");

            // Получение метаданных о таблицах
            DatabaseMetaData metaData = connection.getMetaData();

            // Получение списка таблиц
            ResultSet tables = metaData.getTables(null, null, null, new String[]{"TABLE"});

            // Создание таблицы
            Statement statement = connection.createStatement();
            String createTableQuery = "CREATE TABLE IF NOT EXISTS таблица4 (result INT, name VARCHAR(255))";
            statement.executeUpdate(createTableQuery);
            statement.close();

            // Выполнение сложения
            int a = 5;
            int b = 3;
            int sum = a + b;
            int sub = b-a;
            int mul = a*b;
            int div = b/a;
            int divno = a%b;
            int abs = (Math.abs(a));
            int pow = (int)(Math.pow(a,b));


            // Сохранение результата в базу данных
            PreparedStatement preparedStatement = connection.prepareStatement("INSERT INTO таблица4 (result) values (?)");
            preparedStatement.setInt(1, sum);
            preparedStatement.setInt(1, sub);
            preparedStatement.setInt(1, mul);
            preparedStatement.setInt(1, div);
            preparedStatement.setInt(1, divno);
            preparedStatement.setInt(1, abs);
            preparedStatement.setInt(1, pow);
            preparedStatement.executeUpdate();
            preparedStatement.close();

            // Вывод результата
            System.out.println("Результат сложения: " + sum);
            System.out.println("Результат вычитания: " + sub);
            System.out.println("Результат умножения: " + mul);
            System.out.println("Результат деления: " + div);
            System.out.println("Результат деления чисел по модулю: " + divno);
            System.out.println("Результат модуля: " + abs);
            System.out.println("Результат возведения числа в степень: " + divno);

            // Вывод списка таблиц
            while (tables.next()) {
                System.out.println(tables.getString("TABLE_NAME"));
            }

            // Закрытие соединения
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
            // Закрытие документа
            workbook.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
